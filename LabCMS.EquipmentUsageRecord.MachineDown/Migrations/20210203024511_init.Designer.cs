// <auto-generated />
using System;
using LabCMS.EquipmentUsageRecord.MachineDown.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LabCMS.EquipmentUsageRecord.MachineDown.Migrations
{
    [DbContext(typeof(MachineDownRecordsRepository))]
    [Migration("20210203024511_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("LabCMS.EquipmentUsageRecord.MachineDown.Models.MachineDownRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MachineDownDate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MachineRepairedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MachineDownRecords");
                });

            modelBuilder.Entity("LabCMS.EquipmentUsageRecord.MachineDown.Models.NotifiedToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("MachineDownRecordId")
                        .HasColumnType("integer");

                    b.Property<long>("NotifiedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MachineDownRecordId");

                    b.HasIndex("NotifiedDate");

                    b.ToTable("NotifiedTokens");
                });

            modelBuilder.Entity("LabCMS.EquipmentUsageRecord.MachineDown.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "liha52",
                            Email = "Raccoon.Li@Hella.com"
                        },
                        new
                        {
                            UserId = "zhaofe10",
                            Email = "F.Zhao@Hella.com"
                        });
                });

            modelBuilder.Entity("LabCMS.EquipmentUsageRecord.MachineDown.Models.MachineDownRecord", b =>
                {
                    b.HasOne("LabCMS.EquipmentUsageRecord.MachineDown.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LabCMS.EquipmentUsageRecord.MachineDown.Models.NotifiedToken", b =>
                {
                    b.HasOne("LabCMS.EquipmentUsageRecord.MachineDown.Models.MachineDownRecord", "MachineDownRecord")
                        .WithMany()
                        .HasForeignKey("MachineDownRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDownRecord");
                });
#pragma warning restore 612, 618
        }
    }
}
